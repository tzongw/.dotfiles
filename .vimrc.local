set nocursorline " don't highlight current line

:set pastetoggle=<F1>

" cursor shape
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"

if filereadable(expand("~/.dotfiles/whitespace.vim"))
  source ~/.dotfiles/whitespace.vim
endif

" vimdiff
map <silent> <leader>1 :diffget 1<CR> :diffupdate<CR>
map <silent> <leader>2 :diffget 2<CR> :diffupdate<CR>
map <silent> <leader>3 :diffget 3<CR> :diffupdate<CR>

" set relativenumber

" keyboard shortcuts
inoremap jj <ESC>
inoremap <C-v> <C-r>"
noremap <C-c> <C-w>c

" youcompleteme
nnoremap <leader>d :YcmCompleter GoTo<CR>
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0

" jedi
let g:jedi#usages_command = "<leader>s"
let g:jedi#goto_assignments_command = "<leader>d"

" nerdtree
let NERDTreeIgnore = ['\.pyc$', '\.vimprj$', '\.o$']

" tagbar
let g:tagbar_width = 30

nnoremap <leader>t :tabnew<space>
nnoremap <leader>x :tabc<CR>
nnoremap <leader>c :lcd %:p:h<CR>
nnoremap <leader>w :GitGutterStageHunk<CR>
nnoremap <leader>q :GitGutterUndoHunk<CR>

" auto session
let g:AutoSessionFile=".vimprj"
let g:OrigPWD=getcwd()
if filereadable(g:AutoSessionFile)
    if argc() == 0
        au VimEnter * call EnterHandler()
        au VimEnter * NERDTree
        au VimLeave * NERDTreeClose
        au VimLeave * call LeaveHandler()
    endif
endif
function! LeaveHandler()
    exec "mks! ".g:OrigPWD."/".g:AutoSessionFile
endfunction
function! EnterHandler()
    exe "source ".g:AutoSessionFile
endfunction

" disable preview
set completeopt-=preview

" indent
set shiftwidth=4                                             " normal mode indentation commands use 4 spaces
set softtabstop=4                                            " insert mode tab and backspace use 4 spaces

" highlight search
"set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  let g:rehash256 = 1
  colorscheme molokai
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps
